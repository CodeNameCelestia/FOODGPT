<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>FoodGPT</title>
  <link rel="icon" href="https://i.imgur.com/fgmRaeZ.gif" type="image/x-icon" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/stylesheets/style2.css" />
  <link rel="stylesheet" href="/stylesheets/style3.css" />
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
  <a href="/" class="back-to-home-button">
    <div class="button-box">
      <img class="button-icon" src="https://cdn.discordapp.com/attachments/747678686181851199/1183384313006391317/back.png?ex=65882386&is=6575ae86&hm=b7ec36dcb2c5ad0c0913f2c0519db31308ba796587d3a2dab1bf15bd61199feb&" alt="Back Icon">
      <span class="button-title">Back to Home</span>
    </div>
  </a>

  <a href="/foodbot" class="new-chat-button">
  <div class="button-box">
    <img class="button-icon" src="https://cdn.discordapp.com/attachments/747678686181851199/1183385867117678743/new.png?ex=658824f8&is=6575aff8&hm=e2ee7f466eed637697e556ca5daf57c3f5a04d8895b80e604569cf20f54b86d2&" alt="New Chat Icon">
    <span class="button-title">New Chat</span>
  </div>
</a>
<!-- <a href="/"><button class="button-54" role="button">Homepage</button></a> -->
<div id="chat-container" class="chat-container">
  <div class="header-content">
    <h1 id="logo-text">FoodGPT Chat</h1>
  </div>
  <div id="result-container" class="result-container">
    <!-- Previous prompts and responses will be added here dynamically -->
  </div>

  <form id="chat-form" class="chat-form" onsubmit="return submitForm();">
    <div id="suggestion-boxes" class="suggestion-boxes">
      <div class="suggestion-row">
        <div class="suggestion" onclick="selectSuggestion('Give me something.')">
          <div class="suggestion-title">Give Me Something.</div>
          <div class="suggestion-subtitle">I dont have anyting in mind.</div>
        </div>
        <div class="suggestion" onclick="selectSuggestion('I\'m not feeling good.')">
          <div class="suggestion-title">I'm Not Feeling Good.</div>
          <div class="suggestion-subtitle">Give me food to cheer me up.</div>
        </div>
      </div>
      <div class="suggestion-row">
        <div class="suggestion" onclick="selectSuggestion('It\'s so hot here.')">
          <div class="suggestion-title">It's So Hot Here.</div>
          <div class="suggestion-subtitle">Recommend me foods to keep me cool.</div>
        </div>
        <div class="suggestion" onclick="selectSuggestion('It\'s raining today.')">
          <div class="suggestion-title">It's Raining Today.</div>
          <div class="suggestion-subtitle">Recommend me dishes to keep me warm.</div>
        </div>
      </div>
    </div>
    <input type="text" id="prompt" name="prompt" required placeholder="Message FoodGPT" class="prompt">
    <button type="button" onclick="submitPrompt()" class="button-sub">Submit</button>
  </form>
</div>


    <script>

function selectSuggestion(suggestionText) {
  document.getElementById('prompt').value = suggestionText;
  submitPrompt();
}

function selectSuggestion(suggestionText) {
  document.getElementById('prompt').value = suggestionText;
  submitPrompt();
  document.getElementById('suggestion-boxes').style.display = 'none';
}


function submitForm() {
  submitPrompt();
  return false; // Prevents the default form submission behavior
}
function changeTitleSize(size) {
    document.getElementById('logo-text').style.fontSize = size;
  }


document.addEventListener('DOMContentLoaded', () => {
  const chatContainer = document.getElementById('chat-container');
  const resultContainer = document.getElementById('result-container');
  const chatForm = document.getElementById('chat-form');

  resultContainer.addEventListener('scroll', () => {
    const isScrolledToTop = resultContainer.scrollTop < 200; // Adjust this value as needed
    if (isScrolledToTop) {
      chatContainer.classList.remove('bottom-at-viewport-top');
    } else {
      chatContainer.classList.add('bottom-at-viewport-top');
    }
  });
});


async function typeWriterEffect(element, text, speed) {
  let currentChar = 0;
  const typeWriterInterval = setInterval(() => {
    if (currentChar < text.length) {
      element.innerHTML = '';  // Clear existing content
      element.innerHTML += text.substring(0, currentChar + 1);
      currentChar++;
    } else {
      clearInterval(typeWriterInterval);
    }
  }, speed);
}

    
async function submitPrompt() {
  const prompt = document.getElementById('prompt').value;
  const resultContainer = document.getElementById('result-container');

  // Create a new paragraph for the user prompt
  const userPrompt = document.createElement('p');
  userPrompt.classList.add('chat-bubble', 'user-bubble');
  userPrompt.innerHTML = '<%= user.nickname%>: ' + prompt;
  resultContainer.appendChild(userPrompt);

  const suggestionBoxes = document.getElementById('suggestion-boxes');
  suggestionBoxes.style.display = 'none';
  // You may want to use fetch or another method to send the prompt to your server
  // and get the result. For simplicity, I'll simulate it here.
  const response = await fetch('/chat', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ user_input: prompt }),
  });

  const data = await response.json();
  const result = data.reply;

  // Create a new paragraph for the FoodGPT response
  const foodGPTResponse = document.createElement('p');
  foodGPTResponse.classList.add('chat-bubble', 'chat-gpt-bubble');
  foodGPTResponse.innerHTML = 'FoodGPT: ' + result.replace(/\n/g, '<br>');
  resultContainer.appendChild(foodGPTResponse);

  // Clear the input field
  document.getElementById('prompt').value = '';

  await typeWriterEffect(foodGPTResponse, result, 25);
    
  // Adjust the height of the result container
  resultContainer.scrollTop = resultContainer.scrollHeight;

  
}


    </script>
</body>
</html>
